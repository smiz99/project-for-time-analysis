#####################################################
# This file loads monthly retail sales per day in the US between 1992 and 2017
# This data has been adjusted for inflation
# we will use data to forecast the next two years 
# of sales per day 
#
 # Created by Sami Nheri 16/06/23
#####################################################

# Clear all variables to workspace
rm(list=ls())

# Load the forecasting package 
library(readr)
library(knitr)
library(ggplot2)
library(ggfortify)
# Load the data 

data <- read_csv("C:/Users/HP/Downloads/real_sales_per_day.csv")
View(data)

# Declare this as time series data
Y <- ts(data[,2],start =c(1992,1),frequency = 12)

#####################################################
# Preliminary Analysis 
#####################################################
# Time plot
autoplot(Y) +
  ggtitle("Time Plot: Real US Retail Sales Per Day") +
  ylab("Millions of 2017 Dollars")

# Data has a  strong trend. we should investigate transformations. 
# take the first difference of the data to remove the trend. 
DY <- diff(Y)

#Time Plot of differenced Data 
autoplot(DY) +
  ggtitle("Time Plot: Real US Retail Sales Per Day") +
  ylab("Millions of 2017 Dollars")

# Series appears trend-stationary, use to investigate seasonality
ggseasonplot(DY) +
  ggtitle("Seasonal Plot: Change in Daily Retail Sales") +
  ylab("Millions of 2017 Dollars")

# We can also look at another seasonal plot, the subseries plot 
ggsubseriesplot(DY)

##########################################################
# our series, Y , has trend and seasonality 
# to remove the trend, we take the first difference.
# The first differenced series still has seasonality. 
#
# Forecast with various methods.
##########################################################

##########
# Use a benchmark method to forecast.
# Let's use the seasonal naive method as our benchmark.
# y_t = y_{t-s}+ e_t
##########
fit <- snaive(DY) # Residual SD = 287.06
print(summary(fit))
checkresiduals(fit)

##################
# Fit ETS method 
##################
fit_ets <- ets(Y) # Residual SD = 218.8133
print(summary(fit_ets))
checkresiduals(fit_ets)

##################
# Fit an ARIMA model 
##################
fit_arima <- auto.arima(Y,d=1,D=1,stepwise = FALSE,approximation = FALSE, trace=TRUE) #Residual SD =197.8105
print(summary(fit_arima))
checkresiduals(fit_arima)

#############################
# Forecast with ARIMA model
#############################
fcst<- forecast(fit_arima,h=24)
autoplot(fcst,include=100 )
print(summary(fcst))
